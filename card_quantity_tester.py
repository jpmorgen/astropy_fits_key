"""Draft pull requests to implement units, including arithmetic, in FITS headers
"""
import astropy.units as u
from astropy.io.fits import Card, Header


print('##### DRAFT CARD QUANTITY TESTER') 
print('+++Create plain card')
print(">>> c = Card('EXPTIME', 10, 'Exposure time in seconds')")
c = Card('EXPTIME', 10, 'Exposure time in seconds')
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Create card with units in comment')
print(">>> c = Card('EXPTIME', 10, 'Exposure time (s)')")
c = Card('EXPTIME', 10, 'Exposure time (s)')

##rkaq = 'always'
#rkaq = 'recognized'
#c.return_key_as_quantity = rkaq

print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)


print('+++Change to non-unitful value')
print('>>> c.value = 20')
c.value = 20
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Change to value as Quantity')
print('>>> c.value = 11*u.s')
c.value = 11*u.s
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Change the comment, nuking the units')
print(">>> c.comment = 'This is the start of a really long comment'")
c.comment = 'This is the start of a really long comment'
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Put units back in with new unit property')
print('>>> c.unit = u.s')
c.unit = u.s
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Extend comment')
print(">>> c.comment = 'This is the creation of a reallyreallyreallylon'")
c.comment = 'This is the creation of a reallyreallyreallylon'
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Put units back into extended comment')
print('>>> c.unit = u.s')
c.unit = u.s
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Set units to None')
print('>>> c.unit = None')
c.unit = None
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Change unit location to beginning of comment and turn on Quantity return')
print("c.return_key_as_quantity = 'always'")
c.return_key_as_quantity = 'always'
print("c.unit_str_start = ''")
c.unit_str_start = ''
print("c.unit_str_delimiters = '[]'")
c.unit_str_delimiters = '[]'
print("c.unit_str_end = ' '")
c.unit_str_end = ' '
print("c.unit_str_position = 'start'")
c.unit_str_position = 'start'

print('+++Put new unit position back into extended comment')
print('>>> c.unit = u.s')
c.unit = u.s
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Try to confuse __init__ about units')
print(">>> c = Card('EXPTIME', 10*u.s, 'Exposure time (m)')")
c = Card('EXPTIME', 10*u.s, 'Exposure time (m)')
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Read unknown units')
print(">>> c = Card('EXPTIME', 10, 'Exposure time (parenthetical comment)')")
c = Card('EXPTIME', 10, 'Exposure time (parenthetical comment)')
print('print(c.image)')
print(c.image)
print('print(c.value)')
print(c.value)
print('print(c.unit)')
print(c.unit)
print('print(c.comment)')
print(c.comment)

print('+++Put into header')
print('hdr = Header([c])')
hdr = Header([c])
print("hdr['EXPTIME']")
print(hdr['EXPTIME'])
print("hdr.get('EXPTIME')")
print(hdr.get('EXPTIME'))
print("hdr.comments['EXPTIME']")
print(hdr.comments['EXPTIME'])
print("hdr.cards['EXPTIME'].unit")
print(hdr.cards['EXPTIME'].unit)

print('+++ --> Header object assignment')
print("hdr = Header()")
hdr = Header()
print("hdr['EXPTIME'] = 12*u.s")
hdr['EXPTIME'] = 12*u.s
print("hdr['EXPTIME']")
print(hdr['EXPTIME'])
print("hdr.get('EXPTIME')")
print(hdr.get('EXPTIME'))
print("hdr.comments['EXPTIME']")
print(hdr.comments['EXPTIME'])
print("hdr.cards['EXPTIME'].unit")
print(hdr.cards['EXPTIME'].unit)
print("hdr.quantity['EXPTIME']")
print(hdr.quantity('EXPTIME'))

print('+++ --> Header object assignment as list')
print("hdr = Header([('EXPTIME', 12*u.s, 'Assign through Header object'))]")
hdr = Header([('EXPTIME', 12*u.s, 'Assign through Header object')])
print("hdr['EXPTIME']")
print(hdr['EXPTIME'])
print("hdr.get('EXPTIME')")
print(hdr.get('EXPTIME'))
print("hdr.comments['EXPTIME']")
print(hdr.comments['EXPTIME'])
print("hdr.cards['EXPTIME'].unit")
print(hdr.cards['EXPTIME'].unit)
print("hdr.quantity['EXPTIME']")
print(hdr.quantity('EXPTIME'))

print('+++ --> Header keyword assignment with Quantity and comment')
print("hdr = Header()")
hdr = Header()
print("hdr['EXPTIME'] = (12*u.s, 'Assign through Header object')")
hdr['EXPTIME'] = (12*u.s, 'Assign through Header object')
print("hdr['EXPTIME']")
print(hdr['EXPTIME'])
print("hdr.get('EXPTIME')")
print(hdr.get('EXPTIME'))
print("hdr.comments['EXPTIME']")
print(hdr.comments['EXPTIME'])
print("hdr.cards['EXPTIME'].unit")
print(hdr.cards['EXPTIME'].unit)
print("hdr.quantity['EXPTIME']")
print(hdr.quantity('EXPTIME'))

print('+++ --> Header object assignment with unit in comment')
print("hdr['EXPTIME'] = (12, 'Assign through Header object (s)')")
hdr['EXPTIME'] = (12, 'Assign through Header object (s)')
print("hdr['EXPTIME']")
print(hdr['EXPTIME'])
print("hdr.get('EXPTIME')")
print(hdr.get('EXPTIME'))
print("hdr.comments['EXPTIME']")
print(hdr.comments['EXPTIME'])
print("hdr.cards['EXPTIME'].unit")
print(hdr.cards['EXPTIME'].unit)
print("hdr.quantity['EXPTIME']")
print(hdr.quantity('EXPTIME'))

